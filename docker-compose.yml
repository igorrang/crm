


services:
  next-app:
    build: 
      context: ./next-app
      dockerfile: Dockerfile
    restart: always
    ports: 
      - 3000
    networks:
      - dokploy-network
    labels:
      - traefik. enable=true
      - traefik.http. routers.next-app.rule=Host(*next-app.dokploy.com*)
      - traefik.http.routers.next-app.entrypoints=websecure
      - traefik.http.routers.next-app.tls.certResolver=letsencrypt
      - trafik.http.services.next-app. loadbalancer.server.port=3000
  postgres:
    container_name: banco
    image: igormrangel/postgres:latest3
    ports:
      - "5332:5432"  # Mapeando a porta 5332 no host para a 5432 do container
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 12345678
      POSTGRES_DB: botecobrasil

  frontend:
    build: frontend
    image: igormrangel/frontend:latest
  
    container_name: frontend
    ports:
      - "3000:3000"  # Mapeando a porta 3000 no host para a 3000 do container
    depends_on:
      - backend

  
  backend:
    container_name: backend
    build:
      context: backend
    image: backend:latest4
    volumes:
      - ./backend:/src
    command: npm run dev
    environment:
      DATABASE_URL: postgres://postgres:12345678@postgres:5332/botecobrasil  # URL de conex√£o ao PostgreSQL
    depends_on:
      - postgres  # Aguarda o PostgreSQL estar pronto antes de iniciar

networks:
  dokploy-network:
    external: true 

volumes:
   postgres-data: